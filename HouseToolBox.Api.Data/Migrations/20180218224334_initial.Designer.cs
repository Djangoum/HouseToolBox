// <auto-generated />
using HouseToolBox.Api.Data;
using HouseToolBox.Api.Models.Entities.Enums;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace HouseToolBox.Api.Data.Migrations
{
    [DbContext(typeof(HouseToolBoxContext))]
    [Migration("20180218224334_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HouseToolBox.Api.Models.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Bought");

                    b.Property<DateTime>("CreationDate");

                    b.Property<Guid>("IdProduct");

                    b.Property<DateTime>("LimitDate");

                    b.Property<decimal>("Quantity");

                    b.HasKey("Id");

                    b.HasIndex("IdProduct");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("HouseToolBox.Api.Models.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationDate");

                    b.Property<string>("Description");

                    b.Property<Guid>("IdSeller");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<decimal>("Price");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("IdSeller");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("HouseToolBox.Api.Models.Entities.ProductTag", b =>
                {
                    b.Property<Guid>("IdProduct");

                    b.Property<Guid>("IdTag");

                    b.HasKey("IdProduct", "IdTag");

                    b.HasIndex("IdTag");

                    b.ToTable("ProductTags");
                });

            modelBuilder.Entity("HouseToolBox.Api.Models.Entities.Seller", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Seller");
                });

            modelBuilder.Entity("HouseToolBox.Api.Models.Entities.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("HouseToolBox.Api.Models.Entities.Order", b =>
                {
                    b.HasOne("HouseToolBox.Api.Models.Entities.Product", "Product")
                        .WithMany("Orders")
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HouseToolBox.Api.Models.Entities.Product", b =>
                {
                    b.HasOne("HouseToolBox.Api.Models.Entities.Seller", "Seller")
                        .WithMany("Products")
                        .HasForeignKey("IdSeller")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("HouseToolBox.Api.Models.Entities.ProductTag", b =>
                {
                    b.HasOne("HouseToolBox.Api.Models.Entities.Product", "Product")
                        .WithMany("Tags")
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("HouseToolBox.Api.Models.Entities.Tag", "Tag")
                        .WithMany("Products")
                        .HasForeignKey("IdTag")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
